设计模式简介:

      Q:为什么要用设计模式?
      A:使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编制真正工程化。

      Q:设计模式的类型?
      A:总共有 23 种设计模式。这些模式可以分为三大类：创建型模式（Creational Patterns）、结构型模式（Structural Patterns）、行为型模式（Behavioral Patterns）。
          当然，我们还会讨论另一类设计模式：J2EE 设计模式。

          创建型模式（对象怎么来）: 工厂模式，抽象工厂模式，单例模式，建造者模式，原型模式

          结构性模式（对象和谁有关）: 适配器模式，桥接模式，过滤器模式，组合模式，装饰器模式，外观模式，享元模式，代理模式

          行为型模式（对象与对象在干嘛）: 责任链模式，命令模式，解耦器模式，迭代器模式，中介者模式，备忘录模式，观察者模式，状态模式，空对象模式，策略模式，模板模式，访问者模式

          ##J2EE 模式: MVC模式，业务代表模式，组合实体模式，数据访问对象模式，前端控制器模式，拦截过滤器模式，服务定位器模式，传输对象模式。


      Q:设计模式6大原则?
      A:   开闭原则: 对扩展开放，对修改关闭；实现热插拔，提高扩展性。

           里式代换原则: 任何基类可以出现的地方，其子类一定可以出现；实现抽象的规范，实现子父类互相替换。

           依赖倒转原则: 针对接口编程，依赖于抽象而不依赖于具体.

           接口隔离原则: 降低耦合度，接口单独设计，互相隔离。

           迪米特法则(最少知道原则): 一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。

           合成复用原则:尽量使用聚合，组合，而不是继承。
